/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-04-15 20:37:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class inputForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    ");
 
   if(session.getAttribute("memId") != null){
	   response.sendRedirect("main.jsp");
   }else{
	  

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("  <script type=\"text/javaScript\">\r\n");
      out.write("    \r\n");
      out.write("    function checkIt() {\r\n");
      out.write("        var userinput = document.userinput;\r\n");
      out.write("        if(!userinput.id.value) {\r\n");
      out.write("            alert(\"ID를 입력하세요\");\r\n");
      out.write("            userinput.id.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if(!userinput.passwd.value ) {\r\n");
      out.write("            alert(\"비밀번호를 입력하세요\");\r\n");
      out.write("            userinput.passwd.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if(!userinput.name.value) {\r\n");
      out.write("            alert(\"사용자 이름을 입력하세요\");\r\n");
      out.write("            userinput.name.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if(!userinput.jumin1.value)\r\n");
      out.write("        {\r\n");
      out.write("            alert(\"주민등록번호를 입력하세요\");\r\n");
      out.write("            userinput.jumin1.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if(!userinput.jumin2.value)\r\n");
      out.write("        {\r\n");
      out.write("            alert(\"주민등록번호를 입력하세요\");\r\n");
      out.write("            userinput.jumin2.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("    // 아이디 중복 여부를 판단\r\n");
      out.write("    function openConfirmid(userinput) {\r\n");
      out.write("        // 아이디를 입력했는지 검사\r\n");
      out.write("        if (userinput.id.value == \"\") {\r\n");
      out.write("            alert(\"아이디를 입력하세요\");\r\n");
      out.write("            userinput.id.focus();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        // url과 사용자 입력 id를 조합합니다.\r\n");
      out.write("        url = \"confirmId.jsp?id=\" + userinput.id.value ;\r\n");
      out.write("        \r\n");
      out.write("        // 새로운 윈도우를 엽니다.\r\n");
      out.write("        open(url, \"confirm\", \r\n");
      out.write("\"toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=300, height=200\");\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"\">\r\n");
      out.write("    <link rel=\"icon\" href=\"../../favicon.ico\">\r\n");
      out.write("\r\n");
      out.write("    <title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- 부가적인 테마 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 자바스크립트 -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Custom styles for this template -->\r\n");
      out.write("    <link href=\"signin.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->\r\n");
      out.write("    <!--[if lt IE 9]><script src=\"../../assets/js/ie8-responsive-file-warning.js\"></script><![endif]-->\r\n");
      out.write("    <script src=\"../../assets/js/ie-emulation-modes-warning.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("    <!--[if lt IE 9]>\r\n");
      out.write("      <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\r\n");
      out.write("      <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("  <nav class=\"navbar navbar-inverse navbar-fixed-top\">\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("        <div class=\"navbar-header\" >\r\n");
      out.write("          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\r\n");
      out.write("            <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("            <span class=\"icon-bar\"></span>\r\n");
      out.write("            <span class=\"icon-bar\"></span>\r\n");
      out.write("            <span class=\"icon-bar\"></span>\r\n");
      out.write("          </button>\r\n");
      out.write("          <a class=\"navbar-brand\" href=\"main.jsp\">Hospital</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"navbar\" class=\"navbar-collapse collapse\" >\r\n");
      out.write("          <form class=\"navbar-form navbar-right\">    \r\n");
      out.write("            <a class=\"btn btn-success\" href=\"loginForm.jsp\" role=\"button\">로그인</a>\r\n");
      out.write("            <a class=\"btn btn-success\" href=\"inputForm.jsp\" role=\"button\">회원가입</a>\r\n");
      out.write("          </form>\r\n");
      out.write("        </div><!--/.navbar-collapse -->\r\n");
      out.write("      </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("   <article class=\"container\">      \r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("        <div class=\"page-header\">\r\n");
      out.write("    \t    <h1>회원가입</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("        <form class=\"form-horizontal\" method=\"post\" action=\"inputPro.jsp\" \r\n");
      out.write("      name=\"userinput\" onSubmit=\"return checkIt()\">\r\n");
      out.write("         <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-3 control-label\" for=\"inputName\">아이디</label>\r\n");
      out.write("          <div class=\"col-sm-6\">\r\n");
      out.write("            <input class=\"form-control\" id=\"inputName\" name=\"id\" type=\"text\" placeholder=\"아이디\">\r\n");
      out.write("                    <input type=\"button\" class=\"btn btn-default\" name=\"confirm_id\" value=\"ID중복확인\" \r\n");
      out.write("                    onClick=\"openConfirmid(this.form)\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label class=\"col-sm-3 control-label\" for=\"inputPassword\">비밀번호</label>\r\n");
      out.write("        \t<div class=\"col-sm-6\">\r\n");
      out.write("          <input class=\"form-control\" id=\"inputPassword\" name=\"passwd\" type=\"password\" placeholder=\"비밀번호\">\r\n");
      out.write("        <p class=\"help-block\">숫자, 특수문자 포함 8자 이상</p>\r\n");
      out.write("        \t</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-3 control-label\" for=\"inputName\">이름</label>\r\n");
      out.write("          <div class=\"col-sm-6\">\r\n");
      out.write("            <input class=\"form-control\" id=\"inputName\" name=\"name\"  type=\"text\" placeholder=\"이름\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("         <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-3 control-label\" for=\"inputNumber\">주민등록번호</label>\r\n");
      out.write("              <div class=\"col-sm-6\">\r\n");
      out.write("                <div class=\"input-group\">\r\n");
      out.write("                  <input type=\"number\" class=\"form-control\" id=\"inputNumber\" name=\"jumin1\" size=\"7\" placeholder=\"주민등록번호 앞자리\" />-<input type=\"number\" size=\"7\" class=\"form-control\"name=\"jumin2\" id=\"inputNumber\" placeholder=\"뒷자리\" />\r\n");
      out.write("                \r\n");
      out.write("                </div>\r\n");
      out.write("             </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label class=\"col-sm-3 control-label\" for=\"inputEmail\">이메일</label>\r\n");
      out.write("        <div class=\"col-sm-6\">\r\n");
      out.write("          <input class=\"form-control\" name=\"email\" id=\"inputEmail\" type=\"email\" placeholder=\"이메일\">\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-3 control-label\" for=\"inputWeb\">블로그</label>\r\n");
      out.write("          <div class=\"col-sm-6\">\r\n");
      out.write("            <input class=\"form-control\" id=\"inputWeb\" name=\"blog\" type=\"url\" placeholder=\"블로그 주소\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>   \r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <div class=\"col-sm-12 text-center\">\r\n");
      out.write("            <button class=\"btn btn-primary\" type=\"submit\">회원가입<i class=\"fa fa-check spaceLeft\"></i></button>\r\n");
      out.write("            <button class=\"btn btn-primary\" type=\"reset\">다시입력<i class=\"fa fa-check spaceLeft\"></i></button>\r\n");
      out.write("            <a class=\"btn btn-danger\" href=\"main.jsp\" role=\"button\">가입취소<i class=\"fa fa-times spaceLeft\"></i></a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </form>\r\n");
      out.write("          <hr>\r\n");
      out.write("        </div>\r\n");
      out.write("      </article>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->\r\n");
      out.write("    <script src=\"../../assets/js/ie10-viewport-bug-workaround.js\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
